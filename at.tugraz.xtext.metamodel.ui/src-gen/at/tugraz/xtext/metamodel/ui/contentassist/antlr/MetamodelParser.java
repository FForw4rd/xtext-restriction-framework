/*
 * generated by Xtext
 */
package at.tugraz.xtext.metamodel.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import at.tugraz.xtext.metamodel.services.MetamodelGrammarAccess;

public class MetamodelParser extends AbstractContentAssistParser {
	
	@Inject
	private MetamodelGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected at.tugraz.xtext.metamodel.ui.contentassist.antlr.internal.InternalMetamodelParser createParser() {
		at.tugraz.xtext.metamodel.ui.contentassist.antlr.internal.InternalMetamodelParser result = new at.tugraz.xtext.metamodel.ui.contentassist.antlr.internal.InternalMetamodelParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAbstractElementAccess().getAlternatives(), "rule__AbstractElement__Alternatives");
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getRestrictionAccess().getAlternatives(), "rule__Restriction__Alternatives");
					put(grammarAccess.getFunctionTypeAccess().getGroup(), "rule__FunctionType__Group__0");
					put(grammarAccess.getDatatypeAccess().getGroup(), "rule__Datatype__Group__0");
					put(grammarAccess.getDatatypeAccess().getGroup_2(), "rule__Datatype__Group_2__0");
					put(grammarAccess.getDatatypeAccess().getGroup_2_2(), "rule__Datatype__Group_2_2__0");
					put(grammarAccess.getRestrictionAccess().getGroup_0(), "rule__Restriction__Group_0__0");
					put(grammarAccess.getRestrictionAccess().getGroup_0_1(), "rule__Restriction__Group_0_1__0");
					put(grammarAccess.getRestrictionAccess().getGroup_1(), "rule__Restriction__Group_1__0");
					put(grammarAccess.getRestrictionAccess().getGroup_1_1(), "rule__Restriction__Group_1_1__0");
					put(grammarAccess.getMemberAccess().getGroup(), "rule__Member__Group__0");
					put(grammarAccess.getObjectAccess().getGroup(), "rule__Object__Group__0");
					put(grammarAccess.getObjectAccess().getGroup_2(), "rule__Object__Group_2__0");
					put(grammarAccess.getObjectAccess().getGroup_4(), "rule__Object__Group_4__0");
					put(grammarAccess.getObjectAccess().getGroup_4_1(), "rule__Object__Group_4_1__0");
					put(grammarAccess.getFunctionAccess().getGroup(), "rule__Function__Group__0");
					put(grammarAccess.getFunctionAccess().getGroup_2(), "rule__Function__Group_2__0");
					put(grammarAccess.getFunctionAccess().getGroup_7(), "rule__Function__Group_7__0");
					put(grammarAccess.getFunctionAccess().getGroup_8(), "rule__Function__Group_8__0");
					put(grammarAccess.getDomainmodelAccess().getElementsAssignment(), "rule__Domainmodel__ElementsAssignment");
					put(grammarAccess.getFunctionTypeAccess().getRepeatAssignment_0(), "rule__FunctionType__RepeatAssignment_0");
					put(grammarAccess.getFunctionTypeAccess().getOptionalAssignment_1(), "rule__FunctionType__OptionalAssignment_1");
					put(grammarAccess.getFunctionTypeAccess().getTypeAssignment_2(), "rule__FunctionType__TypeAssignment_2");
					put(grammarAccess.getDatatypeAccess().getNameAssignment_1(), "rule__Datatype__NameAssignment_1");
					put(grammarAccess.getDatatypeAccess().getTypeAssignment_2_1(), "rule__Datatype__TypeAssignment_2_1");
					put(grammarAccess.getDatatypeAccess().getDefaultValueAssignment_2_2_1(), "rule__Datatype__DefaultValueAssignment_2_2_1");
					put(grammarAccess.getDatatypeAccess().getRestrictionsAssignment_2_3(), "rule__Datatype__RestrictionsAssignment_2_3");
					put(grammarAccess.getRestrictionAccess().getStringrestrictionAssignment_0_0(), "rule__Restriction__StringrestrictionAssignment_0_0");
					put(grammarAccess.getRestrictionAccess().getMaxlengthAssignment_0_1_1(), "rule__Restriction__MaxlengthAssignment_0_1_1");
					put(grammarAccess.getRestrictionAccess().getMinlengthAssignment_0_3(), "rule__Restriction__MinlengthAssignment_0_3");
					put(grammarAccess.getRestrictionAccess().getValuerestrictionAssignment_1_0(), "rule__Restriction__ValuerestrictionAssignment_1_0");
					put(grammarAccess.getRestrictionAccess().getMaxvalueAssignment_1_1_1(), "rule__Restriction__MaxvalueAssignment_1_1_1");
					put(grammarAccess.getRestrictionAccess().getMinvalueAssignment_1_3(), "rule__Restriction__MinvalueAssignment_1_3");
					put(grammarAccess.getMemberAccess().getNameAssignment_0(), "rule__Member__NameAssignment_0");
					put(grammarAccess.getMemberAccess().getTypeAssignment_2(), "rule__Member__TypeAssignment_2");
					put(grammarAccess.getObjectAccess().getNameAssignment_1(), "rule__Object__NameAssignment_1");
					put(grammarAccess.getObjectAccess().getSuperTypeAssignment_2_1(), "rule__Object__SuperTypeAssignment_2_1");
					put(grammarAccess.getObjectAccess().getMembersAssignment_4_0(), "rule__Object__MembersAssignment_4_0");
					put(grammarAccess.getObjectAccess().getRestrictionsAssignment_4_1_1(), "rule__Object__RestrictionsAssignment_4_1_1");
					put(grammarAccess.getObjectAccess().getIssecureAssignment_5(), "rule__Object__IssecureAssignment_5");
					put(grammarAccess.getFunctionAccess().getNameAssignment_1(), "rule__Function__NameAssignment_1");
					put(grammarAccess.getFunctionAccess().getSuperTypeAssignment_2_1(), "rule__Function__SuperTypeAssignment_2_1");
					put(grammarAccess.getFunctionAccess().getIdentifierAssignment_5(), "rule__Function__IdentifierAssignment_5");
					put(grammarAccess.getFunctionAccess().getIssecureAssignment_6(), "rule__Function__IssecureAssignment_6");
					put(grammarAccess.getFunctionAccess().getInputsAssignment_7_1(), "rule__Function__InputsAssignment_7_1");
					put(grammarAccess.getFunctionAccess().getOutpustAssignment_8_1(), "rule__Function__OutpustAssignment_8_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			at.tugraz.xtext.metamodel.ui.contentassist.antlr.internal.InternalMetamodelParser typedParser = (at.tugraz.xtext.metamodel.ui.contentassist.antlr.internal.InternalMetamodelParser) parser;
			typedParser.entryRuleDomainmodel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public MetamodelGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(MetamodelGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
