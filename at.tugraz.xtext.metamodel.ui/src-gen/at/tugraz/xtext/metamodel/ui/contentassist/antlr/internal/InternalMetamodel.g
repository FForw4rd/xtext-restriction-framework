/*
 * generated by Xtext
 */
grammar InternalMetamodel;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package at.tugraz.xtext.metamodel.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package at.tugraz.xtext.metamodel.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import at.tugraz.xtext.metamodel.services.MetamodelGrammarAccess;

}

@parser::members {
 
 	private MetamodelGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MetamodelGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleDomainmodel
entryRuleDomainmodel 
:
{ before(grammarAccess.getDomainmodelRule()); }
	 ruleDomainmodel
{ after(grammarAccess.getDomainmodelRule()); } 
	 EOF 
;

// Rule Domainmodel
ruleDomainmodel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainmodelAccess().getElementsAssignment()); }
(rule__Domainmodel__ElementsAssignment)*
{ after(grammarAccess.getDomainmodelAccess().getElementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractElement
entryRuleAbstractElement 
:
{ before(grammarAccess.getAbstractElementRule()); }
	 ruleAbstractElement
{ after(grammarAccess.getAbstractElementRule()); } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractElementAccess().getAlternatives()); }
(rule__AbstractElement__Alternatives)
{ after(grammarAccess.getAbstractElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionType
entryRuleFunctionType 
:
{ before(grammarAccess.getFunctionTypeRule()); }
	 ruleFunctionType
{ after(grammarAccess.getFunctionTypeRule()); } 
	 EOF 
;

// Rule FunctionType
ruleFunctionType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionTypeAccess().getGroup()); }
(rule__FunctionType__Group__0)
{ after(grammarAccess.getFunctionTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDatatype
entryRuleDatatype 
:
{ before(grammarAccess.getDatatypeRule()); }
	 ruleDatatype
{ after(grammarAccess.getDatatypeRule()); } 
	 EOF 
;

// Rule Datatype
ruleDatatype
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDatatypeAccess().getGroup()); }
(rule__Datatype__Group__0)
{ after(grammarAccess.getDatatypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRestriction
entryRuleRestriction 
:
{ before(grammarAccess.getRestrictionRule()); }
	 ruleRestriction
{ after(grammarAccess.getRestrictionRule()); } 
	 EOF 
;

// Rule Restriction
ruleRestriction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRestrictionAccess().getAlternatives()); }
(rule__Restriction__Alternatives)
{ after(grammarAccess.getRestrictionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMember
entryRuleMember 
:
{ before(grammarAccess.getMemberRule()); }
	 ruleMember
{ after(grammarAccess.getMemberRule()); } 
	 EOF 
;

// Rule Member
ruleMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberAccess().getGroup()); }
(rule__Member__Group__0)
{ after(grammarAccess.getMemberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObject
entryRuleObject 
:
{ before(grammarAccess.getObjectRule()); }
	 ruleObject
{ after(grammarAccess.getObjectRule()); } 
	 EOF 
;

// Rule Object
ruleObject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectAccess().getGroup()); }
(rule__Object__Group__0)
{ after(grammarAccess.getObjectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction
entryRuleFunction 
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AbstractElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractElementAccess().getTypeParserRuleCall_0()); }
	ruleType
{ after(grammarAccess.getAbstractElementAccess().getTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getFunctionParserRuleCall_1()); }
	ruleFunction
{ after(grammarAccess.getAbstractElementAccess().getFunctionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDatatypeParserRuleCall_0()); }
	ruleDatatype
{ after(grammarAccess.getTypeAccess().getDatatypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getObjectParserRuleCall_1()); }
	ruleObject
{ after(grammarAccess.getTypeAccess().getObjectParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getGroup_0()); }
(rule__Restriction__Group_0__0)
{ after(grammarAccess.getRestrictionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getRestrictionAccess().getGroup_1()); }
(rule__Restriction__Group_1__0)
{ after(grammarAccess.getRestrictionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__FunctionType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionType__Group__0__Impl
	rule__FunctionType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeAccess().getRepeatAssignment_0()); }
(rule__FunctionType__RepeatAssignment_0)?
{ after(grammarAccess.getFunctionTypeAccess().getRepeatAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionType__Group__1__Impl
	rule__FunctionType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeAccess().getOptionalAssignment_1()); }
(rule__FunctionType__OptionalAssignment_1)?
{ after(grammarAccess.getFunctionTypeAccess().getOptionalAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeAccess().getTypeAssignment_2()); }
(rule__FunctionType__TypeAssignment_2)
{ after(grammarAccess.getFunctionTypeAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Datatype__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Datatype__Group__0__Impl
	rule__Datatype__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Datatype__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatatypeAccess().getDatatypeKeyword_0()); }

	'datatype' 

{ after(grammarAccess.getDatatypeAccess().getDatatypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Datatype__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Datatype__Group__1__Impl
	rule__Datatype__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Datatype__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatatypeAccess().getNameAssignment_1()); }
(rule__Datatype__NameAssignment_1)
{ after(grammarAccess.getDatatypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Datatype__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Datatype__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Datatype__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatatypeAccess().getGroup_2()); }
(rule__Datatype__Group_2__0)?
{ after(grammarAccess.getDatatypeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Datatype__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Datatype__Group_2__0__Impl
	rule__Datatype__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Datatype__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatatypeAccess().getLeftCurlyBracketKeyword_2_0()); }

	'{' 

{ after(grammarAccess.getDatatypeAccess().getLeftCurlyBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Datatype__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Datatype__Group_2__1__Impl
	rule__Datatype__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Datatype__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatatypeAccess().getTypeAssignment_2_1()); }
(rule__Datatype__TypeAssignment_2_1)
{ after(grammarAccess.getDatatypeAccess().getTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Datatype__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Datatype__Group_2__2__Impl
	rule__Datatype__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Datatype__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatatypeAccess().getGroup_2_2()); }
(rule__Datatype__Group_2_2__0)?
{ after(grammarAccess.getDatatypeAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Datatype__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Datatype__Group_2__3__Impl
	rule__Datatype__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Datatype__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatatypeAccess().getRestrictionsAssignment_2_3()); }
(rule__Datatype__RestrictionsAssignment_2_3)*
{ after(grammarAccess.getDatatypeAccess().getRestrictionsAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Datatype__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Datatype__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Datatype__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatatypeAccess().getRightCurlyBracketKeyword_2_4()); }

	'}' 

{ after(grammarAccess.getDatatypeAccess().getRightCurlyBracketKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Datatype__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Datatype__Group_2_2__0__Impl
	rule__Datatype__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Datatype__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatatypeAccess().getDefaultvalueKeyword_2_2_0()); }

	'defaultvalue=' 

{ after(grammarAccess.getDatatypeAccess().getDefaultvalueKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Datatype__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Datatype__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Datatype__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatatypeAccess().getDefaultValueAssignment_2_2_1()); }
(rule__Datatype__DefaultValueAssignment_2_2_1)
{ after(grammarAccess.getDatatypeAccess().getDefaultValueAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Restriction__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group_0__0__Impl
	rule__Restriction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getStringrestrictionAssignment_0_0()); }
(rule__Restriction__StringrestrictionAssignment_0_0)
{ after(grammarAccess.getRestrictionAccess().getStringrestrictionAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Restriction__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group_0__1__Impl
	rule__Restriction__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getGroup_0_1()); }
(rule__Restriction__Group_0_1__0)?
{ after(grammarAccess.getRestrictionAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Restriction__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group_0__2__Impl
	rule__Restriction__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getMinlengthKeyword_0_2()); }

	'minlength' 

{ after(grammarAccess.getRestrictionAccess().getMinlengthKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Restriction__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getMinlengthAssignment_0_3()); }
(rule__Restriction__MinlengthAssignment_0_3)
{ after(grammarAccess.getRestrictionAccess().getMinlengthAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Restriction__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group_0_1__0__Impl
	rule__Restriction__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getMaxlengthKeyword_0_1_0()); }

	'maxlength' 

{ after(grammarAccess.getRestrictionAccess().getMaxlengthKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Restriction__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getMaxlengthAssignment_0_1_1()); }
(rule__Restriction__MaxlengthAssignment_0_1_1)
{ after(grammarAccess.getRestrictionAccess().getMaxlengthAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Restriction__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group_1__0__Impl
	rule__Restriction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getValuerestrictionAssignment_1_0()); }
(rule__Restriction__ValuerestrictionAssignment_1_0)
{ after(grammarAccess.getRestrictionAccess().getValuerestrictionAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Restriction__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group_1__1__Impl
	rule__Restriction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getGroup_1_1()); }
(rule__Restriction__Group_1_1__0)?
{ after(grammarAccess.getRestrictionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Restriction__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group_1__2__Impl
	rule__Restriction__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getMinvalueKeyword_1_2()); }

	'minvalue' 

{ after(grammarAccess.getRestrictionAccess().getMinvalueKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Restriction__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getMinvalueAssignment_1_3()); }
(rule__Restriction__MinvalueAssignment_1_3)
{ after(grammarAccess.getRestrictionAccess().getMinvalueAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Restriction__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group_1_1__0__Impl
	rule__Restriction__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getMaxvalueKeyword_1_1_0()); }

	'maxvalue' 

{ after(grammarAccess.getRestrictionAccess().getMaxvalueKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Restriction__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getMaxvalueAssignment_1_1_1()); }
(rule__Restriction__MaxvalueAssignment_1_1_1)
{ after(grammarAccess.getRestrictionAccess().getMaxvalueAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Member__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Member__Group__0__Impl
	rule__Member__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccess().getNameAssignment_0()); }
(rule__Member__NameAssignment_0)
{ after(grammarAccess.getMemberAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Member__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Member__Group__1__Impl
	rule__Member__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getMemberAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Member__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Member__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccess().getTypeAssignment_2()); }
(rule__Member__TypeAssignment_2)
{ after(grammarAccess.getMemberAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Object__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group__0__Impl
	rule__Object__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getObjectKeyword_0()); }

	'object' 

{ after(grammarAccess.getObjectAccess().getObjectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group__1__Impl
	rule__Object__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getNameAssignment_1()); }
(rule__Object__NameAssignment_1)
{ after(grammarAccess.getObjectAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group__2__Impl
	rule__Object__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getGroup_2()); }
(rule__Object__Group_2__0)?
{ after(grammarAccess.getObjectAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group__3__Impl
	rule__Object__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getObjectAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group__4__Impl
	rule__Object__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getGroup_4()); }
(rule__Object__Group_4__0)*
{ after(grammarAccess.getObjectAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group__5__Impl
	rule__Object__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getIssecureAssignment_5()); }
(rule__Object__IssecureAssignment_5)?
{ after(grammarAccess.getObjectAccess().getIssecureAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getObjectAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Object__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group_2__0__Impl
	rule__Object__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getObjectAccess().getExtendsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getSuperTypeAssignment_2_1()); }
(rule__Object__SuperTypeAssignment_2_1)
{ after(grammarAccess.getObjectAccess().getSuperTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Object__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group_4__0__Impl
	rule__Object__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getMembersAssignment_4_0()); }
(rule__Object__MembersAssignment_4_0)
{ after(grammarAccess.getObjectAccess().getMembersAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getGroup_4_1()); }
(rule__Object__Group_4_1__0)?
{ after(grammarAccess.getObjectAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Object__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group_4_1__0__Impl
	rule__Object__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getLeftCurlyBracketKeyword_4_1_0()); }

	'{' 

{ after(grammarAccess.getObjectAccess().getLeftCurlyBracketKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group_4_1__1__Impl
	rule__Object__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getRestrictionsAssignment_4_1_1()); }
(rule__Object__RestrictionsAssignment_4_1_1)
{ after(grammarAccess.getObjectAccess().getRestrictionsAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group_4_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group_4_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_4_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getRightCurlyBracketKeyword_4_1_2()); }

	'}' 

{ after(grammarAccess.getObjectAccess().getRightCurlyBracketKeyword_4_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }

	'function' 

{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
(rule__Function__NameAssignment_1)
{ after(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_2()); }
(rule__Function__Group_2__0)?
{ after(grammarAccess.getFunctionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getIdKeyword_4()); }

	'id' 

{ after(grammarAccess.getFunctionAccess().getIdKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__5__Impl
	rule__Function__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getIdentifierAssignment_5()); }
(rule__Function__IdentifierAssignment_5)
{ after(grammarAccess.getFunctionAccess().getIdentifierAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__6__Impl
	rule__Function__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getIssecureAssignment_6()); }
(rule__Function__IssecureAssignment_6)?
{ after(grammarAccess.getFunctionAccess().getIssecureAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__7__Impl
	rule__Function__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_7()); }
(rule__Function__Group_7__0)?
{ after(grammarAccess.getFunctionAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__8__Impl
	rule__Function__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_8()); }
(rule__Function__Group_8__0)?
{ after(grammarAccess.getFunctionAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Function__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_2__0__Impl
	rule__Function__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getFunctionAccess().getExtendsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getSuperTypeAssignment_2_1()); }
(rule__Function__SuperTypeAssignment_2_1)
{ after(grammarAccess.getFunctionAccess().getSuperTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_7__0__Impl
	rule__Function__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGetsKeyword_7_0()); }

	'gets' 

{ after(grammarAccess.getFunctionAccess().getGetsKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getInputsAssignment_7_1()); }
(rule__Function__InputsAssignment_7_1)*
{ after(grammarAccess.getFunctionAccess().getInputsAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_8__0__Impl
	rule__Function__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getReturnsKeyword_8_0()); }

	'returns' 

{ after(grammarAccess.getFunctionAccess().getReturnsKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getOutpustAssignment_8_1()); }
(rule__Function__OutpustAssignment_8_1)*
{ after(grammarAccess.getFunctionAccess().getOutpustAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Domainmodel__ElementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainmodelAccess().getElementsAbstractElementParserRuleCall_0()); }
	ruleAbstractElement{ after(grammarAccess.getDomainmodelAccess().getElementsAbstractElementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__RepeatAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeAccess().getRepeatRepeatKeyword_0_0()); }
(
{ before(grammarAccess.getFunctionTypeAccess().getRepeatRepeatKeyword_0_0()); }

	'repeat' 

{ after(grammarAccess.getFunctionTypeAccess().getRepeatRepeatKeyword_0_0()); }
)

{ after(grammarAccess.getFunctionTypeAccess().getRepeatRepeatKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__OptionalAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeAccess().getOptionalOptionalKeyword_1_0()); }
(
{ before(grammarAccess.getFunctionTypeAccess().getOptionalOptionalKeyword_1_0()); }

	'optional' 

{ after(grammarAccess.getFunctionTypeAccess().getOptionalOptionalKeyword_1_0()); }
)

{ after(grammarAccess.getFunctionTypeAccess().getOptionalOptionalKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeAccess().getTypeTypeCrossReference_2_0()); }
(
{ before(grammarAccess.getFunctionTypeAccess().getTypeTypeIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getFunctionTypeAccess().getTypeTypeIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getFunctionTypeAccess().getTypeTypeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Datatype__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatatypeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDatatypeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Datatype__TypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatatypeAccess().getTypeSTRINGTerminalRuleCall_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getDatatypeAccess().getTypeSTRINGTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Datatype__DefaultValueAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatatypeAccess().getDefaultValueSTRINGTerminalRuleCall_2_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getDatatypeAccess().getDefaultValueSTRINGTerminalRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Datatype__RestrictionsAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatatypeAccess().getRestrictionsRestrictionParserRuleCall_2_3_0()); }
	ruleRestriction{ after(grammarAccess.getDatatypeAccess().getRestrictionsRestrictionParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__StringrestrictionAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getStringrestrictionStringrestrictionKeyword_0_0_0()); }
(
{ before(grammarAccess.getRestrictionAccess().getStringrestrictionStringrestrictionKeyword_0_0_0()); }

	'stringrestriction' 

{ after(grammarAccess.getRestrictionAccess().getStringrestrictionStringrestrictionKeyword_0_0_0()); }
)

{ after(grammarAccess.getRestrictionAccess().getStringrestrictionStringrestrictionKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__MaxlengthAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getMaxlengthINTTerminalRuleCall_0_1_1_0()); }
	RULE_INT{ after(grammarAccess.getRestrictionAccess().getMaxlengthINTTerminalRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__MinlengthAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getMinlengthINTTerminalRuleCall_0_3_0()); }
	RULE_INT{ after(grammarAccess.getRestrictionAccess().getMinlengthINTTerminalRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__ValuerestrictionAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getValuerestrictionValuerestricionKeyword_1_0_0()); }
(
{ before(grammarAccess.getRestrictionAccess().getValuerestrictionValuerestricionKeyword_1_0_0()); }

	'valuerestricion' 

{ after(grammarAccess.getRestrictionAccess().getValuerestrictionValuerestricionKeyword_1_0_0()); }
)

{ after(grammarAccess.getRestrictionAccess().getValuerestrictionValuerestricionKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__MaxvalueAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getMaxvalueINTTerminalRuleCall_1_1_1_0()); }
	RULE_INT{ after(grammarAccess.getRestrictionAccess().getMaxvalueINTTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__MinvalueAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getMinvalueINTTerminalRuleCall_1_3_0()); }
	RULE_INT{ after(grammarAccess.getRestrictionAccess().getMinvalueINTTerminalRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Member__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getMemberAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Member__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccess().getTypeTypeCrossReference_2_0()); }
(
{ before(grammarAccess.getMemberAccess().getTypeTypeIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getMemberAccess().getTypeTypeIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getMemberAccess().getTypeTypeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Object__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getObjectAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Object__SuperTypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getSuperTypeObjectCrossReference_2_1_0()); }
(
{ before(grammarAccess.getObjectAccess().getSuperTypeObjectIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getObjectAccess().getSuperTypeObjectIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getObjectAccess().getSuperTypeObjectCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Object__MembersAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getMembersMemberParserRuleCall_4_0_0()); }
	ruleMember{ after(grammarAccess.getObjectAccess().getMembersMemberParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Object__RestrictionsAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getRestrictionsRestrictionParserRuleCall_4_1_1_0()); }
	ruleRestriction{ after(grammarAccess.getObjectAccess().getRestrictionsRestrictionParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Object__IssecureAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getIssecureIssecureKeyword_5_0()); }
(
{ before(grammarAccess.getObjectAccess().getIssecureIssecureKeyword_5_0()); }

	'issecure' 

{ after(grammarAccess.getObjectAccess().getIssecureIssecureKeyword_5_0()); }
)

{ after(grammarAccess.getObjectAccess().getIssecureIssecureKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__SuperTypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getSuperTypeObjectCrossReference_2_1_0()); }
(
{ before(grammarAccess.getFunctionAccess().getSuperTypeObjectIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getFunctionAccess().getSuperTypeObjectIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getFunctionAccess().getSuperTypeObjectCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__IdentifierAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getIdentifierINTTerminalRuleCall_5_0()); }
	RULE_INT{ after(grammarAccess.getFunctionAccess().getIdentifierINTTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__IssecureAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getIssecureIssecureKeyword_6_0()); }
(
{ before(grammarAccess.getFunctionAccess().getIssecureIssecureKeyword_6_0()); }

	'issecure' 

{ after(grammarAccess.getFunctionAccess().getIssecureIssecureKeyword_6_0()); }
)

{ after(grammarAccess.getFunctionAccess().getIssecureIssecureKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__InputsAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getInputsFunctionTypeParserRuleCall_7_1_0()); }
	ruleFunctionType{ after(grammarAccess.getFunctionAccess().getInputsFunctionTypeParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__OutpustAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getOutpustFunctionTypeParserRuleCall_8_1_0()); }
	ruleFunctionType{ after(grammarAccess.getFunctionAccess().getOutpustFunctionTypeParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


