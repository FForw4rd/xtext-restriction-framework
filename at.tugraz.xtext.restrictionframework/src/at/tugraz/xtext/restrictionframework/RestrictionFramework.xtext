grammar at.tugraz.xtext.restrictionframework.RestrictionFramework with org.eclipse.xtext.xbase.Xbase

generate restrictionFramework "http://www.tugraz.at/xtext/restrictionframework/RestrictionFramework"

//ending: *.rest

Domainmodel:
  importSection=XImportSection?
  elements+=AbstractElement*;
 
AbstractElement:
  PackageDeclaration | Entity;
 
PackageDeclaration:
  'package' name=QualifiedName '{'
    elements+=AbstractElement*
  '}';
  
// Entity:
//  'entity' name=ValidID 
//    ('extends' superType=JvmTypeReference)? '{'
//    features+=Feature*
//  '}';

Entity:
	Datatype | Function | Object | FunctionBlock
;



Datatype:
	"datatype" name=ValidID ':' type=JvmTypeReference 
	( '{'
		("default" "="defaultValue = STRING)? //TODO needed?
		thisRestriction = Restriction
	'}')?
;

Restriction:
	StringRestriction | ValueRestriction
;

StringRestriction:
	"minlength" minlength = INT
	"maxlength" maxlength = INT 
;

ValueRestriction:
	"minvalue" minvalue = INT
	"maxvalue" maxvalue = INT
;

Object:
	"object" name = ValidID ('extends' superType=JvmTypeReference)? '{'
		(issecure ?= "issecure")?
		(members += Member)+
	"}"
;

Member:
	name = ID ':' type = JvmTypeReference // TODO: geht nit mit [Datatype]
;

Function:
	"function" name=ValidID ('extends' superType = [Object])? "{"
		"id" identifier = INT // TODO identifieruniquechecking
		(issecure ?= "issecure")?
		("gets" input+= FunctionParameter)? // TODO: Wo soll ich das überprüfen?
		("returns" output += FunctionParameter)?
	"}"
;

FunctionParameter: // TODO: "repeat String, repeat int" soll "String, int, String, int, String, int, ..." sein?
	(repeat ?= "repeat")? (optional ?= "optional")? Type=JvmTypeReference
;

FunctionBlock:
	"FunctionBlock" name=ValidID "{"
	(functions += ([Function] | FunctionBlock))+
	"}"
;

